{"version":3,"sources":["images/jamiedesignedfinal.svg","images/sandridge2.png","images/victimadviceline2.png","images/engtech.png","images/withzing.png","components/Portfolio.js","components/test.js","App.js","components/Button.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Portfolio","react_default","a","createElement","className","href","src","Victim","target","Sandridge","Engtech","Withzing","Component","AddTripButton","props","id","onClick","addTrip","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","triggerAddTripState","setState","objectSpread","state","isEmptyState","isAddTripState","logo","alt","components_Portfolio","test","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48e8ad37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jamiedesignedfinal.8f82959a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sandridge2.88a9a552.png\";","module.exports = __webpack_public_path__ + \"static/media/victimadviceline2.dd51fed1.png\";","module.exports = __webpack_public_path__ + \"static/media/engtech.12c756d8.png\";","module.exports = __webpack_public_path__ + \"static/media/withzing.ef80e607.png\";","import React, { Component } from 'react';\nimport Sandridge from '../images/sandridge2.png';\nimport Victim from '../images/victimadviceline2.png';\nimport Engtech from '../images/engtech.png';\nimport Withzing from '../images/withzing.png';\n\nclass Portfolio extends Component {\n\n  render() {\n    return (\n      <div className=\"portfolio-container\">\n          <div className=\"portfolio-box portfolio-box1\"><a href=\"https://victimadviceline.org.uk/\"><img src={Victim}></img></a></div>\n          <div className=\"unfocused portfolio-box portfolio-box2\"><a target=\"_blank\" href=\"https://sandridge.formationmedia.site/\"><img src={Sandridge}></img></a></div>\n          <div className=\"unfocused portfolio-box portfolio-box3\"><a target=\"_blank\" href=\"https://engtechgroup.com/\"><img src={Engtech}></img></a></div>\n          <div className=\"unfocused portfolio-box portfolio-box4\"><a target=\"_blank\" href=\"https://www.withzing.com/\"><img src={Withzing}></img></a></div>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;","import React from 'react'\n\nconst AddTripButton = props => {\n\n  return <div id=\"enter\" onClick={props.addTrip}>Enter </div>\n}\n\nexport default AddTripButton","import React, { Component } from 'react';\nimport logo from './images/jamiedesignedfinal.svg';\nimport Portfolio from './components/Portfolio';\nimport AddTripButton from './components/test';\nimport Button from './components/Button';\nimport './styles/App.css';\nimport './styles/portfolio.css';\n\nclass App extends Component {\n\n    constructor(props) {\n    super(props)\n    this.state = { isEmptyState: true }\n  }\n\n  triggerAddTripState = () => {\n    this.setState({\n      ...this.state,\n      isEmptyState: false,\n      isAddTripState: true\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header>\n            <div className=\"App-header section-padding\">\n\n            {this.state.isEmptyState && <img src={logo} className=\"App-logo\" alt=\"logo\" /> }\n            {this.state.isAddTripState && <img src={logo} className=\"App-logo-small\" alt=\"logo\" /> }\n            {this.state.isAddTripState &&  <div className=\"Navbar\">\n                <div className=\"Development\"><ruby>Development <rp>(</rp><rt>デベロプメント</rt><rp>)</rp></ruby></div>\n                <div className=\"Design\"><ruby>Design <rp>(</rp><rt>デザイン</rt><rp>)</rp></ruby></div>\n                <div className=\"Print\"><ruby>Print <rp>(</rp><rt>プリント</rt><rp>)</rp></ruby></div>\n                <div className=\"About\"><ruby>About <rp>(</rp><rt>アバウト</rt><rp>)</rp></ruby></div>\n            </div>}\n        </div>\n\n        </header>\n\n           {this.state.isAddTripState && <Portfolio />}\n\n        <footer>\n           <div className=\"cities section-padding\">\n               <ruby>Tokyo <rp>(</rp><rt>トーキョー</rt><rp>)</rp></ruby>\n             <h4>・</h4>\n              <ruby>Dubai <rp>(</rp><rt>ドゥーバイ</rt><rp>)</rp></ruby>\n             <h4>・</h4>\n              <ruby>Warwick <rp>(</rp><rt>ウォリック</rt><rp>)</rp></ruby>\n          </div>\n\n            <div>\n      {this.state.isEmptyState && <AddTripButton addTrip={this.triggerAddTripState} />}\n\n    </div>\n\n            {/*<Button />*/}\n\n\n\n        </footer>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {addClass: false}\n  }\n  toggle() {\n    this.setState({addClass: !this.state.addClass});\n  }\n  render() {\n    let boxClass = [\"box\"];\n    let logoClass = [\"small\"];\n    if(this.state.addClass) {\n      boxClass.push('green');\n      logoClass.push('small');\n    }\n    return(\n        <div className={boxClass.join(' ')} onClick={this.toggle.bind(this)}>{this.state.addClass ? \"Remove a class\" : \"Add a class (click the box)\"}</div>\n    );\n  }\n}\n\nexport default Button;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}